name: Build Release
on:
  push:
    tags:
      - v*

env:
  arch_list:
          [
            "x86_64",
            "aarch64",
            "armv7h"
          ]


jobs:
  build-releases:
    strategy:
      matrix:
        arch: ${{ env.arch_list }}
    name: Build ${{ matrix.arch }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: 'paru/'
      - name: Get arch-bootstrap
        uses: actions/checkout@v3
        with:
          path: 'bootstrap/'
          repository: 'https://github.com/tokland/arch-bootstrap.git'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build ${{ matrix.arch }} release
        shell: bash
        run: |
          apt-get update
          apt-get install arch-install-scripts bash xz zstd gzip gawk sed
          mv paru/paru-*.tar.zst artifacts
          bash bootstrap/arch-bootstrap.sh -a ${{ matrix.arch }} -q rootfs/
          mkdir rootfs/paru
          mount --bind paru/ rootfs/paru/
          mount --bind rootfs/ rootfs/
          arch-chroot rootfs
          pacman-key --init && pacman-key --populate
          pacman -Syu base base-devel rustup
          rustup default stable
          cd /paru
          bash scripts/dist
          exit
          mkdir -p artifacts
          mv paru/paru.tar.zst artifacts/paru-${{ matrix.arch }}.tar.zst
      - uses: actions/upload-artifact@v2
        with:
          name: paru-${{ matrix.arch }}
          path: artifacts

  create_release:
    name: Create release from this build
    needs: [build-releases]
    runs-on: ubuntu-latest
    steps:
      - name: Read info
        id: tags
        shell: bash
        run: |
          echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tags.outputs.tag }}
          release_name: ${{ steps.tags.outputs.tag }}
          draft: true
          prerelease: false


  upload_artifacts:
    name: Upload build artifacts to new release
    needs: [build-releases, create_release]
    strategy:
      matrix:
        arch: ${{ env.arch_list }}
    runs-on: ubuntu-latest
    steps:
      - name: Read info
        id: tags
        shell: bash
        run: |
          echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
      - uses: actions/download-artifact@v2
        with:
          name: paru-${{ matrix.arch }}
      - name: Upload ${{ matrix.arch }} asset
        id: upload-release-asset-${{ matrix.arch }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./paru-${{ matrix.arch }}.tar.zst
          asset_name: paru-${{ steps.tags.outputs.tag }}-${{ matrix.arch }}.tar.zst
          asset_content_type: application/tar+zstd

